spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://111.230.187.254:63049/bc?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowMultiQueries=true&useSSL=false&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=Chpmysql!@#666
spring.datasource.name=mysql-test


# the connection pool are applied to all of the above data sources 
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# Configure the time to get a connection waiting for timeout
spring.datasource.druid.maxWait=60000
# How long is the interval to be detected to detect the free connection, the unit is milliseconds
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# The minimum survival time in the connection pool. Unit is milliseconds
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM t_user
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=true
spring.datasource.druid.testOnReturn=false
# Open the PSCache, and specify the size of the PSCache on each connection
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
#  filters, after the removal of the monitoring interface SQL can not be statistics,'wall'for firewalls
spring.datasource.druid.filters=stat,wall,log4j
# Open the mergeSql function through the connectProperties property; slow SQL record 
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# Merging multiple DruidDataSource monitoring data 
#spring.datasource.druid.useGlobalDataSourceStat=true